package com.fujitsu.cloudlab.cart.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.fujitsu.cloudlab.cart.model.Cart;
import com.fujitsu.cloudlab.cart.model.CartSearchCriteria;
import com.fujitsu.cloudlab.cart.service.CartComposerService;
import com.fujitsu.cloudlab.commons.constants.AppConstants;
import com.fujitsu.cloudlab.commons.exception.ApiException;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiParam;

@RestController
@RequestMapping("/cart")
@Api(tags = {"Cart"})
public class CartComposerController {

  @Autowired CartComposerService cartComposerService;

  @PostMapping(
      consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE},
      produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE})
  public Cart addToCart(
      @ApiParam(
              value = "A unique id for each request generated by each application",
              required = true)
          @RequestHeader(value = AppConstants.TRANSACTION_ID, required = true)
          String transactionId,
      @RequestBody CartSearchCriteria searchCriteria)
      throws ApiException {
    return cartComposerService.createCart(searchCriteria, transactionId);
  }
  
  @GetMapping(
		  path = "/{cartId}",
	      consumes = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE},
	      produces = {MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_XML_VALUE})
	  public Cart getCart(
	      @ApiParam(
	              value = "A unique id for each request generated by each application",
	              required = true)
	          @RequestHeader(value = AppConstants.TRANSACTION_ID, required = true)
	          String transactionId,
	          @ApiParam(
		              value = "A unique id for each cart",
		              required = true) @PathVariable(value = "cartId") String cartId)
	      throws ApiException {
	  System.out.println("CartId ############ "+cartId);
	    return cartComposerService.getCart(cartId, transactionId);	  
	  }
}
